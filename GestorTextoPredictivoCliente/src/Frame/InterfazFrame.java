/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;


import java.awt.Font;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextArea;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.JTextComponent;
import util.Configuracion;
import util.PopUpMenu;
import util.Posicion;
import util.ProtocoloConexion;

/**
 *
 * @author jcsp0003
 */
public class InterfazFrame extends javax.swing.JFrame {

    private Font font;
    private final Configuracion config;
    private final ProtocoloConexion protocolo;
    private final PopUpMenu popUp;

    /**
     * Creates new form Interfaz
     *
     * @throws javax.swing.text.BadLocationException
     * @throws java.io.FileNotFoundException
     */
    public InterfazFrame() throws BadLocationException, FileNotFoundException {
        initComponents();
        setLocationRelativeTo(null);

        config = new Configuracion();
        setIdiomaInterfaz();
        protocolo = new ProtocoloConexion(config);

        font = new Font("Arial", Font.PLAIN, 20);
        this.jTextArea1.setFont(font);

        this.popUp = new PopUpMenu(this.jPopupMenu1, this.jTextArea1);

        Posicion posi = new Posicion();

        this.jTextArea1.addKeyListener(new KeyListenerImpl(this.popUp, posi, this.jTextArea1, this.protocolo));
        this.jTextArea1.addCaretListener(new CaretListenerImpl(this.jTextArea1, posi));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jToolBar1 = new javax.swing.JToolBar();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemNuevo = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        ItemGuardarComo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
        );

        jMenu1.setText("Archivo");

        jMenuItemNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.gif"))); // NOI18N
        jMenuItemNuevo.setText("Nuevo");
        jMenuItemNuevo.setToolTipText("");
        jMenuItemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemNuevo);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/abrir.gif"))); // NOI18N
        jMenuItem2.setText("Abrir...");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.gif"))); // NOI18N
        jMenuItem3.setText("Guardar");
        jMenu1.add(jMenuItem3);

        ItemGuardarComo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardarComo.gif"))); // NOI18N
        ItemGuardarComo.setText("Guardar como...");
        ItemGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemGuardarComoActionPerformed(evt);
            }
        });
        jMenu1.add(ItemGuardarComo);
        jMenu1.add(jSeparator1);

        jMenuItem5.setText("Salir");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Deshacer");
        jMenu2.add(jMenuItem6);
        jMenu2.add(jSeparator2);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setText("Cortar");
        jMenu2.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setText("Copiar");
        jMenu2.add(jMenuItem8);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setText("Pegar");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jMenuItem10.setText("Eliminar");
        jMenu2.add(jMenuItem10);
        jMenu2.add(jSeparator3);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem11.setText("Buscar...");
        jMenu2.add(jMenuItem11);

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem13.setText("Reemplazar");
        jMenu2.add(jMenuItem13);
        jMenu2.add(jSeparator4);

        jMenuItem15.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem15.setText("Seleccionar todo");
        jMenu2.add(jMenuItem15);

        jMenuItem16.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem16.setText("Hora y fecha");
        jMenu2.add(jMenuItem16);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ajustes");

        jMenuItem17.setText("Formato");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem17);

        jMenuItem18.setText("Predicci√≥n");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem18);

        jMenuItem19.setText("Idioma");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem19);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Ayuda");

        jMenuItem1.setText("Acerca de (NOMBRE)");
        jMenu4.add(jMenuItem1);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void ItemGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemGuardarComoActionPerformed

    }//GEN-LAST:event_ItemGuardarComoActionPerformed

    private void jMenuItemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText("");
    }//GEN-LAST:event_jMenuItemNuevoActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        // TODO add your handling code here:
        FormatoFrame ff = new FormatoFrame(this, true, font, this, this.config);
        ff.setVisible(true);
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        // TODO add your handling code here:
        ConfigurarPrediccion conf = new ConfigurarPrediccion(this, true, this.protocolo);
        conf.setVisible(true);
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        // TODO add your handling code here:
        try {
            IdiomaFrame id = new IdiomaFrame(this, false, this.config, this);
            id.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(InterfazFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem19ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ItemGuardarComo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemNuevo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    /**
     * Aplica una fuente al area de exto 
     * @param f Nueva fuente
     */
    public void aplicarFormato(Font f) {
        this.font = f;
        this.jTextArea1.setFont(font);
    }

    /**
     * Establece a los elemenos el idioma indicado en la configuracion
     */
    public void setIdiomaInterfaz() {
        jMenu1.setText(this.config.getPalabra(0));
        jMenu2.setText(this.config.getPalabra(1));
        jMenu3.setText(this.config.getPalabra(2));
        jMenu4.setText(this.config.getPalabra(3));
        jMenuItemNuevo.setText(this.config.getPalabra(4));
        jMenuItem2.setText(this.config.getPalabra(5));
        jMenuItem3.setText(this.config.getPalabra(6));
        ItemGuardarComo.setText(this.config.getPalabra(7));
        jMenuItem5.setText(this.config.getPalabra(8));
        jMenuItem6.setText(this.config.getPalabra(9));
        jMenuItem7.setText(this.config.getPalabra(10));
        jMenuItem8.setText(this.config.getPalabra(11));
        jMenuItem9.setText(this.config.getPalabra(12));
        jMenuItem10.setText(this.config.getPalabra(13));
        jMenuItem11.setText(this.config.getPalabra(14));
        jMenuItem13.setText(this.config.getPalabra(15));
        jMenuItem15.setText(this.config.getPalabra(16));
        jMenuItem16.setText(this.config.getPalabra(17));
        jMenuItem17.setText(this.config.getPalabra(18));
        jMenuItem18.setText(this.config.getPalabra(19));
        jMenuItem19.setText(this.config.getPalabra(20));
        jMenuItem1.setText(this.config.getPalabra(21)); //<--- Cambiar
        this.setTitle(this.config.getPalabra(34));
    }

    /**
     * Lisener de escriura en el area de texto
     */
    private static class KeyListenerImpl implements KeyListener {

        private final PopUpMenu popMenu;
        private final Posicion pos;
        private final JTextArea jt;
        private final ProtocoloConexion protocolo;

        /**
         * Construcor paramerizado
         * @param pop PopUpMenu de sugerencias
         * @param p Objeo posici√≥n del caret
         * @param jt Area de texo sobre la que se escribe
         * @param prot Proocolo de conexion
         */
        public KeyListenerImpl(PopUpMenu pop, Posicion p, JTextArea jt, ProtocoloConexion prot) {
            this.popMenu = pop;
            this.pos = p;
            this.jt = jt;
            this.protocolo = prot;
        }

        /**
         * Evento de pulsar y soltar una tecla que hace desaparecer el PopUpMenu
         * @param ke Evento de tecla
         */
        @Override
        public void keyTyped(KeyEvent ke) {
            this.popMenu.desaparecer();
        }

        /**
         * Evento de pulsar una tecla
         * @param ke Evento de tecla
         */
        @Override
        public void keyPressed(KeyEvent ke) {

        }

        /**
         * Evento de soltar una tecla que solicia la prediccion
         * @param ke Evento de tecla
         */
        @Override
        public void keyReleased(KeyEvent ke) {
            System.out.println(ke.getKeyCode());
            if (ke.getKeyCode() == 40 || ke.getKeyCode() == 38) {
                this.popMenu.darFoco();
            } else {
                //Borrar
                if (ke.getKeyCode() == 8 || ke.getKeyCode() == 127) {
                    this.popMenu.desaparecer();
                    return;
                }
                //Movimiento lateral
                if (ke.getKeyCode() == 37 || ke.getKeyCode() == 39) {
                    this.popMenu.desaparecer();
                    return;
                }
                //No hay nada
                if ("".equals(this.jt.getText().replaceAll("\n", ""))) {
                    return;
                }

                int caracteresAnteriores = 0;
                if (this.jt.getCaretPosition() - 60 >= 0) {
                    caracteresAnteriores = this.jt.getCaretPosition() - 60;
                }
                String texto = this.jt.getText().substring(caracteresAnteriores, this.jt.getCaretPosition());

                boolean acabado = false;
                if (this.jt.getCaretPosition() != 0) {
                    acabado = this.jt.getText().charAt(texto.length() - 1) == ' ';
                }

                String srtResultado;
                //SACAR AQUI LA RESPUESTA DEL SERVIDOR
                if (acabado) {
                    srtResultado = this.protocolo.enviarMensaje(7, 1 + texto.toLowerCase());
                } else {
                    srtResultado = this.protocolo.enviarMensaje(7, 0 + texto.toLowerCase());
                }

                if (srtResultado.length() > 2) {
                    srtResultado = srtResultado.substring(1, srtResultado.length() - 1);
                    this.popMenu.mostrar(ke, this.pos.getX(), this.pos.getY(), srtResultado);
                } else {
                    this.popMenu.desaparecer();
                }
            }

        }
    }

    /**
     * Listener de cambio de posici√≥n del caret
     */
    private class CaretListenerImpl implements CaretListener {

        private final JTextArea jt;
        private final Posicion pos;

        /**
         * Consrucor paramerizado
         * @param jt Area de texto 
         * @param pos Posicion del care
         */
        CaretListenerImpl(JTextArea jt, Posicion pos) {
            this.jt = jt;
            this.pos = pos;
        }

        
        /**
         * Evento que almacena la nueva posici√≥n del care al cambiar.
         * @param e Evento del caret
         */
        @Override
        public void caretUpdate(CaretEvent e) {
            JTextComponent textComp = (JTextComponent) e.getSource();
            try {
                if ("".equals(this.jt.getText().replaceAll("\n", ""))) {
                    return;
                }

                Rectangle rect = textComp.getUI().modelToView(textComp, e.getDot());
                String posiciones = rect.toString();
                String[] posArr = posiciones.substring(rect.toString().indexOf("[") + 1, rect.toString().length() - 1).split(",");

                int x = Integer.parseInt(posArr[0].substring(2, posArr[0].length()));
                int y = Integer.parseInt(posArr[1].substring(2, posArr[1].length())) + Integer.parseInt(posArr[3].substring(7, posArr[3].length()));
                pos.setX(x);
                pos.setY(y);
            } catch (BadLocationException ex) {
                throw new RuntimeException("Failed to get pixel position of caret", ex);
            }
        }
    }

}
